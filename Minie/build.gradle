// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

description = 'the Minie physics-support library for jMonkeyEngine'
ext {
    artifact = 'Minie'
    version = minieVersion
    baseName = "$artifact-$version"
}

sourceSets.main {
    java { srcDir 'src/main/java' }
    resources { srcDir 'src/main/resources' }
}
build { dependsOn 'pom' }
jar { baseName project.ext.baseName }
javadocJar { baseName project.ext.baseName }
sourcesJar { baseName project.ext.baseName }

dependencies {
    //compile "jme3utilities:jme3-utilities-debug:$jme3utilitiesdebugVersion"
    compile project(':debug')

    // The following dependencies are for testing and should be commented
    // out when building a release.
    runtime "org.jmonkeyengine:jme3-desktop:$jmonkeyengineVersion"
    runtime "org.jmonkeyengine:jme3-lwjgl:$jmonkeyengineVersion"
    compile "org.jmonkeyengine:jme3-plugins:$jmonkeyengineVersion"
    runtime 'org.jmonkeyengine:jme3-testdata:3.1.0-stable'
}

compileJava {
    options.headerOutputDirectory = new File('build/cpp')
}

task pom {
    doLast {
        pom {
            project {
                artifactId project.ext.artifact
                licenses {
                    license {
                        distribution 'repo'
                        name 'New BSD (3-clause) License'
                        url 'https://opensource.org/licenses/BSD-3-Clause'
                    }
                }
                version project.ext.version
            }
        }.writeTo("${buildDir}/libs/${project.ext.baseName}.pom")
    }
}

// cleanup tasks
clean { dependsOn 'cleanDLLs', 'cleanSOs' }
task cleanDLLs(type: Delete) {
    delete fileTree(dir: '.', include: '*.dll')
}
task cleanSOs(type: Delete) {
    delete fileTree(dir: '.', include: '*.so')
}
